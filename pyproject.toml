[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
  "setuptools-scm",
]

[project]
name = "danling"
description = "Scaffold for experienced Machine Learning Researchers"
readme = "README.md"
keywords = [
  "Artificial Intelligence",
  "Deep Learning",
  "Machine Learning",
]
license = {file = "LICENSE"}
maintainers = [
    {name = "Zhiyuan Chen", email = "this@zyc.ai"},
]
authors = [
    {name = "Zhiyuan Chen", email = "this@zyc.ai"},
]
requires-python = ">=3"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dynamic = [
  "version",
]
dependencies = [
  'cached-property; python_version < "3.8"',
  "chanfig>=0.0.91",
  "gitpython",
  'strenum; python_version < "3.11"',
  "tqdm",
]
[project.optional-dependencies]
jax = [
  "flax",
  "jax",
]
tensorflow = [
  "tensorflow",
]
torch = [
  "accelerate",
  "torch",
  "torcheval",
  "torchmetrics",
]
[project.urls]
documentation = "https://danling.org"
homepage = "https://danling.org"
repository = "https://github.com/ZhiyuanChen/DanLing"

[tool.setuptools]
packages = ["danling"]

[tool.setuptools_scm]
write_to = "danling/_version.py"

[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"

[tool.flake8]
max-line-length = 120

[tool.pytest.ini_options]
addopts = "--doctest-modules --cov"

[tool.pytest]
norecursedirs = "demo/*"

[tool.coverage.run]
branch = true
include = ["danling/**"]

[tool.coverage.paths]
source = ["icrawler"]

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.json]
output = "coverage.json"

[tool.coverage.report]
show_missing = true
# fail_under = 80

[tool.mypy]
ignore_missing_imports = true

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = """
  E0012,
  E0401,
  R0201,
  R0801,
"""

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.main]
fail-under = 9.8
